void helper(vector<int>& candidates, int target,vector<int>temp,vector<vector<int>>&ans,int i)
    {
        if(i==candidates.size())
        {
            if(target==0)
                ans.push_back(temp);
            return;
        }
        if(target<0)
            return;
        
        temp.push_back(candidates[i]);
        helper(candidates,target-candidates[i],temp,ans,i);
        temp.pop_back();
        helper(candidates,target,temp,ans,i+1);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int>temp;
        vector<vector<int>>ans;
        helper(candidates,target,temp,ans,0);
        return ans;
    }
