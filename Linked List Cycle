    // O(N), O(N)
    // bool hasCycle(ListNode *head) {
    //     unordered_map<ListNode*,int>m;
    //     while(head!=NULL)
    //     {
    //         if(m.find(head)!=m.end())
    //             return true;
    //         m[head]=1;
    //         head=head->next;
    //     }
    //     return false;
    // }

    // O(N),O(1)
    bool hasCycle(ListNode *head) {
        ListNode* fast=head,*slow=head;
        while(fast!=NULL && fast->next!=NULL)
        {
            fast=fast->next->next;
            slow=slow->next;
            if(slow==fast)
                return true;
        }
        return false;
    }
